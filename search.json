[{"path":"https://mdkarcher.github.io/repractice/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 repractice authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://mdkarcher.github.io/repractice/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Michael Karcher. Author, maintainer.","code":""},{"path":"https://mdkarcher.github.io/repractice/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Karcher M (2025). repractice: Framework Reproducible Practice Problems. R package version 0.1.0, https://github.com/mdkarcher/repractice.","code":"@Manual{,   title = {repractice: A Framework for Reproducible Practice Problems},   author = {Michael Karcher},   year = {2025},   note = {R package version 0.1.0},   url = {https://github.com/mdkarcher/repractice}, }"},{"path":"https://mdkarcher.github.io/repractice/index.html","id":"repractice","dir":"","previous_headings":"","what":"A Framework for Reproducible Practice Problems","title":"A Framework for Reproducible Practice Problems","text":"goal repractice facilitate authoring combinatorially variable practice problems solutions.","code":""},{"path":"https://mdkarcher.github.io/repractice/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A Framework for Reproducible Practice Problems","text":"can install development version repractice like :","code":"devtools::install_github(\"mdkarcher/repractice\")"},{"path":"https://mdkarcher.github.io/repractice/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"A Framework for Reproducible Practice Problems","text":"basic example shows solve common problem:","code":"library(repractice)  details <- list(name = \"Michael\", subject=\"statistics\") compile_text(\"My name is <<name>>, and I teach <<subject>>.\", vars = details) #> My name is Michael, and I teach statistics.  setup <- list(exponent = 3) compile_text(r\"(The derivative of $\\pm C x^<<exponent>>$ is $\\pm <<exponent>> C x^<<exponent-1>>$)\", vars = setup) #> The derivative of $\\pm C x^3$ is $\\pm 3 C x^2$"},{"path":"https://mdkarcher.github.io/repractice/reference/all_questions.html","id":null,"dir":"Reference","previous_headings":"","what":"Format a problem/solution into markdown — all_questions","title":"Format a problem/solution into markdown — all_questions","text":"Format problem/solution markdown","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/all_questions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format a problem/solution into markdown — all_questions","text":"","code":"all_questions(problem, listch = \"1.\", prepend_question = TRUE, spacer = \"\\n\")  all_solutions(problem, listch = \"1\", prepend_solution = TRUE)"},{"path":"https://mdkarcher.github.io/repractice/reference/all_questions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format a problem/solution into markdown — all_questions","text":"problem fully compiled problem. listch string prepend subquestions. Defaults \"1.\" (numbered list). prepend_question, prepend_solution logical (default TRUE) whether include question/solution field listing subquestions/subsolutions. spacer string (default \"\\n\") append subquestions.","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/all_questions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format a problem/solution into markdown — all_questions","text":"string containing compiled problem/solution formatted markdown.","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/all_questions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format a problem/solution into markdown — all_questions","text":"","code":"all_questions(simple_prop(seed=1)) #> [1] \"In a survey of 26 people, 1 people said \\\"yes\\\" to a particular question. What proportion of the people said \\\"yes\\\"?\" all_solutions(simple_prop(seed=1)) #> [1] \"The proportion is $\\\\frac{1}{26} = 0.038$.\"  all_questions(simple_prop_percent(seed=1)) #> [1] \"In a survey of 26 people, 1 people said \\\"yes\\\" to a particular question.\\n\\n1. What proportion of the people said \\\"yes\\\"?\\n\\n\\n1. What percent of the people said \\\"yes\\\"?\\n\" all_solutions(simple_prop_percent(seed=1)) #> [1] \"1. The proportion is $\\\\frac{1}{26} = 0.038$.\\n\\n1. The percentage is $\\\\frac{1}{26}\\\\cdot 100\\\\% = 3.8\\\\%$.\""},{"path":"https://mdkarcher.github.io/repractice/reference/build_problemset.html","id":null,"dir":"Reference","previous_headings":"","what":"Container for multiple problem templates — build_problemset","title":"Container for multiple problem templates — build_problemset","text":"Container multiple problem templates","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/build_problemset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Container for multiple problem templates — build_problemset","text":"","code":"build_problemset(template_list, prob = NULL, title = \"\", label = title)"},{"path":"https://mdkarcher.github.io/repractice/reference/build_problemset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Container for multiple problem templates — build_problemset","text":"template_list list problem templates. prob optional vector weights use sampling problems problem set. Defaults NULL, representing uniform distribution. title optional string used short title description whole set. label optional shorts label problem set. Defaults value title.","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/build_problemset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Container for multiple problem templates — build_problemset","text":"problemset object.","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/build_problemset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Container for multiple problem templates — build_problemset","text":"","code":"percent_problems = build_problemset(list(   simple_percent,   simple_percent_successes ), title=\"Percents\")"},{"path":"https://mdkarcher.github.io/repractice/reference/ceilingk.html","id":null,"dir":"Reference","previous_headings":"","what":"Ceiling and floor with different precision — ceilingk","title":"Ceiling and floor with different precision — ceilingk","text":"ceilingk rounds numeric vector x k decimal places. floork rounds numeric vector x k decimal places.","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/ceilingk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ceiling and floor with different precision — ceilingk","text":"","code":"ceilingk(x, k = 0)  floork(x, k = 0)"},{"path":"https://mdkarcher.github.io/repractice/reference/ceilingk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ceiling and floor with different precision — ceilingk","text":"x numeric vector values rounded . k integer indicating number decimal places rounded . Default 0","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/ceilingk.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ceiling and floor with different precision — ceilingk","text":"numeric vector rounded values.","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/ceilingk.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ceiling and floor with different precision — ceilingk","text":"","code":"ceilingk(3.14159, 2) #> [1] 3.15 floork(3.14159, 2) #> [1] 3.14"},{"path":"https://mdkarcher.github.io/repractice/reference/comma_and.html","id":null,"dir":"Reference","previous_headings":"","what":"Concatenate a list with commands and a concluding ","title":"Concatenate a list with commands and a concluding ","text":"Concatenate list commands concluding \"\"","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/comma_and.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concatenate a list with commands and a concluding ","text":"","code":"comma_and(x, oxford = TRUE)"},{"path":"https://mdkarcher.github.io/repractice/reference/comma_and.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Concatenate a list with commands and a concluding ","text":"x vector string-coercible objects. oxford logical whether include Oxford comma.","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/comma_and.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Concatenate a list with commands and a concluding ","text":"string comma concatenated (string-coerced) objects.","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/comma_and.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Concatenate a list with commands and a concluding ","text":"","code":"comma_and(1:3) #> 1, 2, and 3"},{"path":"https://mdkarcher.github.io/repractice/reference/comp.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare values and summarize as (in)equality symbols — comp","title":"Compare values and summarize as (in)equality symbols — comp","text":"Compare values summarize ()equality symbols","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/comp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare values and summarize as (in)equality symbols — comp","text":"","code":"comp(a, b)"},{"path":"https://mdkarcher.github.io/repractice/reference/comp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare values and summarize as (in)equality symbols — comp","text":", b values compare.","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/comp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare values and summarize as (in)equality symbols — comp","text":"character \"=\" equal, \">\" greater b, \"<\" less b.","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/comp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare values and summarize as (in)equality symbols — comp","text":"","code":"comp(1,1) #> [1] \"=\" comp(1,2) #> [1] \"<\" comp(2,1) #> [1] \">\""},{"path":"https://mdkarcher.github.io/repractice/reference/compile_figure.html","id":null,"dir":"Reference","previous_headings":"","what":"Pre-specify plotting function arguments — compile_figure","title":"Pre-specify plotting function arguments — compile_figure","text":"Pre-specify plotting function arguments","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/compile_figure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pre-specify plotting function arguments — compile_figure","text":"","code":"compile_figure(func, vars)"},{"path":"https://mdkarcher.github.io/repractice/reference/compile_figure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pre-specify plotting function arguments — compile_figure","text":"func function Plotting function single argument taking list plotting variables. vars listish List environment containing variables make available string interpolation. Defaults parent.frame().","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/compile_figure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pre-specify plotting function arguments — compile_figure","text":"function arguments uses original function variables vars.","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/compile_figure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pre-specify plotting function arguments — compile_figure","text":"","code":"vars <- list(x = 1:5, y = 5:1) func <- function(args) plot(args$x, args$y, pch=19) func_noargs <- compile_figure(func, vars) func_noargs()"},{"path":"https://mdkarcher.github.io/repractice/reference/compile_text.html","id":null,"dir":"Reference","previous_headings":"","what":"LaTeX-friendly string interpolation — compile_text","title":"LaTeX-friendly string interpolation — compile_text","text":"Wrapper glue::glue_data() function LaTeX- raw-string-friendly defaults.","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/compile_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LaTeX-friendly string interpolation — compile_text","text":"","code":"compile_text(   text,   vars = parent.frame(),   open = \"<<\",   close = \">>\",   trim = FALSE )"},{"path":"https://mdkarcher.github.io/repractice/reference/compile_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"LaTeX-friendly string interpolation — compile_text","text":"text string Input template string. vars listish List environment containing variables make available string interpolation. Defaults parent.frame(). open string Opening delimiter. Defaults \"<<\". close string Closing delimiter. Defaults \">>\". trim logical Whether trim text glue::trim() . Unlike glue::glue(), defaults FALSE.","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/compile_text.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"LaTeX-friendly string interpolation — compile_text","text":"glue object.","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/compile_text.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"LaTeX-friendly string interpolation — compile_text","text":"","code":"details <- list(name = \"Michael\", subject=\"statistics\") compile_text(\"My name is <<name>>, and I teach <<subject>>.\", vars = details) #> My name is Michael, and I teach statistics.  setup <- list(ex = 3) compile_text(   r\"(The derivative of $\\pm C x^<<ex>>$ is $\\pm <<ex>> C x^<<ex-1>>$)\",   vars = setup) #> The derivative of $\\pm C x^3$ is $\\pm 3 C x^2$"},{"path":"https://mdkarcher.github.io/repractice/reference/dotplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Dot plot (histograms) — dotplot","title":"Dot plot (histograms) — dotplot","text":"Dot plot (histograms)","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/dotplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dot plot (histograms) — dotplot","text":"","code":"dotplot(   x,   breaks = \"Sturges\",   xlim = NULL,   ylim = NULL,   plot = TRUE,   xlab = NULL,   ylab = \"Count\",   ... )"},{"path":"https://mdkarcher.github.io/repractice/reference/dotplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dot plot (histograms) — dotplot","text":"x vector values plotted. breaks passed hist(). xlim, ylim range x y values visualize. plot logical TRUE (default) dot plot plotted. xlab, ylab axis labels. ... arguments passed plot().","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/dotplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dot plot (histograms) — dotplot","text":"histogram object underlying dot plot.","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/dotplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dot plot (histograms) — dotplot","text":"","code":"dotplot(c(1,2,3,3,5,5,5,5,6,7,7,9))  #> $breaks #> [1]  0  2  4  6  8 10 #>  #> $counts #> [1] 2 2 5 2 1 #>  #> $density #> [1] 0.08333333 0.08333333 0.20833333 0.08333333 0.04166667 #>  #> $mids #> [1] 1 3 5 7 9 #>  #> $xname #> [1] \"x\" #>  #> $equidist #> [1] TRUE #>  #> $stacks #>    x Count #> 1  1     1 #> 2  1     2 #> 3  3     1 #> 4  3     2 #> 5  5     1 #> 6  5     2 #> 7  5     3 #> 8  5     4 #> 9  5     5 #> 10 7     1 #> 11 7     2 #> 12 9     1 #>"},{"path":"https://mdkarcher.github.io/repractice/reference/format_problem.html","id":null,"dir":"Reference","previous_headings":"","what":"Format a problem/solution into markdown with figures and tables — format_problem","title":"Format a problem/solution into markdown with figures and tables — format_problem","text":"Format problem/solution markdown figures tables","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/format_problem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format a problem/solution into markdown with figures and tables — format_problem","text":"","code":"format_problem(prob, pts = NULL, spacer = \"\")  format_solution(prob)"},{"path":"https://mdkarcher.github.io/repractice/reference/format_problem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format a problem/solution into markdown with figures and tables — format_problem","text":"prob fully compiled problem. pts optional number points. spacer string passed all_questions()/all_solutions().","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/format_problem.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format a problem/solution into markdown with figures and tables — format_problem","text":"","code":"format_problem(simple_prop(seed=1)) #> In a survey of 26 people, 1 people said \"yes\" to a particular question. What proportion of the people said \"yes\"? format_solution(simple_prop(seed=1)) #> The proportion is $\\frac{1}{26} = 0.038$."},{"path":"https://mdkarcher.github.io/repractice/reference/format_problems.html","id":null,"dir":"Reference","previous_headings":"","what":"Format a list of problems and (optionally) solutions — format_problems","title":"Format a list of problems and (optionally) solutions — format_problems","text":"Format list problems (optionally) solutions","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/format_problems.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format a list of problems and (optionally) solutions — format_problems","text":"","code":"format_problems(probs, pts_list = NULL, show_sol = FALSE)"},{"path":"https://mdkarcher.github.io/repractice/reference/format_problems.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format a list of problems and (optionally) solutions — format_problems","text":"probs list compiled problems. pts_list optional vector points. show_sol logical (default FALSE) whether show solutions.","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/format_problems.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format a list of problems and (optionally) solutions — format_problems","text":"","code":"format_problems(list(simple_prop(seed=1), simple_percent(seed=2))) #> ## Problem 1 #> In a survey of 26 people, 1 people said \"yes\" to a particular question. What proportion of the people said \"yes\"? #>  #>  \\newpage  #>  #> ## Problem 2 #> In a survey of 25 people, 6 people said \"yes\" to a particular question. What percent of the people said \"yes\"? #>  #>  \\newpage  #>"},{"path":"https://mdkarcher.github.io/repractice/reference/indep_tab.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate independent two-way tables — indep_tab","title":"Generate independent two-way tables — indep_tab","text":"Generate independent two-way tables","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/indep_tab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate independent two-way tables — indep_tab","text":"","code":"indep_tab(n, rprobs, cprobs, dnames = NULL, totals = TRUE)"},{"path":"https://mdkarcher.github.io/repractice/reference/indep_tab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate independent two-way tables — indep_tab","text":"n integer sample size. rprobs, cprobs vectors row- column-probabilities. dnames list dimension names. See dimnames(). totals logical (default TRUE) whether include row column totals.","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/indep_tab.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate independent two-way tables — indep_tab","text":"matrix containing two way table.","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/indep_tab.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate independent two-way tables — indep_tab","text":"","code":"indep_tab(100, c(0.5,0.5), c(0.3,0.4,0.3),   dnames=list(Sex=c('M','F'), class=c('A','B','C')), totals=TRUE) #>        class #> Sex      A  B  C Total #>   M     11 20 15    46 #>   F     19 20 15    54 #>   Total 30 40 30   100"},{"path":"https://mdkarcher.github.io/repractice/reference/is_neg.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for negative values — is_neg","title":"Check for negative values — is_neg","text":"Check negative values","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/is_neg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for negative values — is_neg","text":"","code":"is_neg(x)"},{"path":"https://mdkarcher.github.io/repractice/reference/is_neg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for negative values — is_neg","text":"x vector values check negativeness. Run .numeric first.","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/is_neg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for negative values — is_neg","text":"logcical vector TRUEs negative values FALSEs nonnegative values.","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/is_neg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check for negative values — is_neg","text":"","code":"is_neg(-1) #> [1] TRUE  is_neg(c(10, -10)) #> [1] FALSE  TRUE"},{"path":"https://mdkarcher.github.io/repractice/reference/lgd.html","id":null,"dir":"Reference","previous_headings":"","what":"Expand inequality symbol to word — lgd","title":"Expand inequality symbol to word — lgd","text":"Expand inequality symbol word","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/lgd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expand inequality symbol to word — lgd","text":"","code":"lgd(ineq)"},{"path":"https://mdkarcher.github.io/repractice/reference/lgd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expand inequality symbol to word — lgd","text":"ineq string \">\" \"<\"","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/lgd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expand inequality symbol to word — lgd","text":"string \"less\" ineq \"<\", \"greater\" ineq \">\", \"different\" ineq anything else.","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/lgd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expand inequality symbol to word — lgd","text":"","code":"lgd(\"<\") #> [1] \"less\" lgd(\">\") #> [1] \"greater\" lgd(neq()) #> [1] \"different\""},{"path":"https://mdkarcher.github.io/repractice/reference/lower_tail.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine whether a p-value calculation should use lower.tail. — lower_tail","title":"Determine whether a p-value calculation should use lower.tail. — lower_tail","text":"Determine whether p-value calculation use lower.tail.","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/lower_tail.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine whether a p-value calculation should use lower.tail. — lower_tail","text":"","code":"lower_tail(ineq, z)"},{"path":"https://mdkarcher.github.io/repractice/reference/lower_tail.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine whether a p-value calculation should use lower.tail. — lower_tail","text":"ineq string \"<\" gives \"less \" test, \">\" gives \"greater \" test, anything else gives \"two-sided\" test. z numeric test statistic.","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/lower_tail.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine whether a p-value calculation should use lower.tail. — lower_tail","text":"logical whether p-value calls stats::pnorm() stats::pt() use lower.tail.","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/lower_tail.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Determine whether a p-value calculation should use lower.tail. — lower_tail","text":"","code":"lower_tail(\"<\", 1.5) #> [1] TRUE lower_tail(neq(), -1.5) #> [1] TRUE"},{"path":"https://mdkarcher.github.io/repractice/reference/neq.html","id":null,"dir":"Reference","previous_headings":"","what":"Shortcut for LaTeX not equal character — neq","title":"Shortcut for LaTeX not equal character — neq","text":"Shortcut LaTeX equal character","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/neq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shortcut for LaTeX not equal character — neq","text":"","code":"neq()"},{"path":"https://mdkarcher.github.io/repractice/reference/neq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shortcut for LaTeX not equal character — neq","text":"string r\"(\\\\neq)\"","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/neq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shortcut for LaTeX not equal character — neq","text":"","code":"compile_text(r\"($x <<neq()>> 0$)\") #> $x \\neq 0$"},{"path":"https://mdkarcher.github.io/repractice/reference/points_block.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate table of quiz points — points_block","title":"Generate table of quiz points — points_block","text":"Generate table quiz points","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/points_block.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate table of quiz points — points_block","text":"","code":"points_block(pts)"},{"path":"https://mdkarcher.github.io/repractice/reference/points_block.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate table of quiz points — points_block","text":"pts vector point values.","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/points_block.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate table of quiz points — points_block","text":"string containing points block rendered knitr::kable().","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/points_block.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate table of quiz points — points_block","text":"","code":"points_block(c(10,15,20)) #>  #>  #> | Question | Points Possible | Points Received | #> |:--------:|:---------------:|:---------------:| #> |    1     |       10        |                 | #> |    2     |       15        |                 | #> |    3     |       20        |                 | #> |  Total   |       45        |                 |"},{"path":"https://mdkarcher.github.io/repractice/reference/rdist.html","id":null,"dir":"Reference","previous_headings":"","what":"Random finite probability distribution — rdist","title":"Random finite probability distribution — rdist","text":"Generates finite-dimensional probability distribution according symmetric Dirichlet distribution.","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/rdist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Random finite probability distribution — rdist","text":"","code":"rdist(k, concentration = 1)"},{"path":"https://mdkarcher.github.io/repractice/reference/rdist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Random finite probability distribution — rdist","text":"k integer; size probability distribution. concentration numeric; acts concentration parameter symmetric Dirichlet distribution.","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/rdist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Random finite probability distribution — rdist","text":"numeric vector probabilities.","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/rdist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Random finite probability distribution — rdist","text":"","code":"rdist(5, 1) #> [1] 0.008530489 0.008290437 0.433569695 0.348116840 0.201492539"},{"path":"https://mdkarcher.github.io/repractice/reference/repractice-package.html","id":null,"dir":"Reference","previous_headings":"","what":"repractice: A Framework for Reproducible Practice Problems — repractice-package","title":"repractice: A Framework for Reproducible Practice Problems — repractice-package","text":"portable framework randomizable logic markdown templating, focus generating combinatorially variable practice problems solutions.","code":""},{"path":[]},{"path":"https://mdkarcher.github.io/repractice/reference/repractice-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"repractice: A Framework for Reproducible Practice Problems — repractice-package","text":"Maintainer: Michael Karcher michael.d.karcher@gmail.com (ORCID)","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/repractice_shiny_tabbed.html","id":null,"dir":"Reference","previous_headings":"","what":"Tabbed Shiny interface for multiple problem sets — repractice_shiny_tabbed","title":"Tabbed Shiny interface for multiple problem sets — repractice_shiny_tabbed","text":"Tabbed Shiny interface multiple problem sets","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/repractice_shiny_tabbed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tabbed Shiny interface for multiple problem sets — repractice_shiny_tabbed","text":"","code":"repractice_shiny_tabbed(problemset_list)"},{"path":"https://mdkarcher.github.io/repractice/reference/repractice_shiny_tabbed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tabbed Shiny interface for multiple problem sets — repractice_shiny_tabbed","text":"problemset_list list problemsets.","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/repractice_shiny_tabbed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tabbed Shiny interface for multiple problem sets — repractice_shiny_tabbed","text":"shinyApp() object.","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/repractice_shiny_tabbed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tabbed Shiny interface for multiple problem sets — repractice_shiny_tabbed","text":"","code":"prop_problems = build_problemset(list(   simple_prop,   pet_prop,   simple_successes,   dotplot_visual_prop ), title=\"Proportions\")  percent_problems = build_problemset(list(   simple_percent,   simple_percent_successes ), title=\"Percents\")  if (FALSE) { # \\dontrun{ repractice_shiny_tabbed(list(prop_problems, percent_problems)) } # }"},{"path":"https://mdkarcher.github.io/repractice/reference/simple_prop.html","id":null,"dir":"Reference","previous_headings":"","what":"Simple proportion/percent problem templates. — simple_prop","title":"Simple proportion/percent problem templates. — simple_prop","text":"Collection simple example problems involving proportions /percents.","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/simple_prop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simple proportion/percent problem templates. — simple_prop","text":"","code":"simple_prop(seed = NULL)  pet_prop(seed = NULL)  simple_percent(seed = NULL)  simple_prop_percent(seed = NULL)  simple_successes(seed = NULL)  simple_percent_successes(seed = NULL)  dotplot_visual_prop(seed = NULL)"},{"path":"https://mdkarcher.github.io/repractice/reference/simple_prop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simple proportion/percent problem templates. — simple_prop","text":"seed (optional) integer; pseudorandom seed used withr::local_seed() inside problem.","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/simple_prop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simple proportion/percent problem templates. — simple_prop","text":"compiled problem","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/simple_prop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simple proportion/percent problem templates. — simple_prop","text":"","code":"simple_prop(seed=1) #> $setup #> $setup$total #> [1] 26 #>  #> $setup$successes #> [1] 1 #>  #> $setup$failures #> [1] 25 #>  #> $setup$proportion #> [1] 0.038 #>  #>  #> $question #> In a survey of 26 people, 1 people said \"yes\" to a particular question. What proportion of the people said \"yes\"? #>  #> $answer #> [1] 0.038 #>  #> $solution #> The proportion is $\\frac{1}{26} = 0.038$. #>  pet_prop(seed=2) #> $setup #> $setup$total #> [1] 25 #>  #> $setup$successes #> [1] 6 #>  #> $setup$failures #> [1] 19 #>  #> $setup$proportion #> [1] 0.24 #>  #>  #> $question #> In a survey of 25 people, 6 people said they had a pet. What proportion of the people had a pet? #>  #> $answer #> [1] 0.24 #>  #> $solution #> The proportion of people with a pet is $\\frac{6}{25} = 0.24$. #>  simple_percent(seed=3) #> $setup #> $setup$total #> [1] 24 #>  #> $setup$successes #> [1] 7 #>  #> $setup$failures #> [1] 17 #>  #> $setup$proportion #> [1] 0.292 #>  #>  #> $question #> In a survey of 24 people, 7 people said \"yes\" to a particular question. What percent of the people said \"yes\"? #>  #> $answer #> [1] 29.2 #>  #> $solution #> The percentage is $\\frac{7}{24}\\cdot 100\\% = 29.2\\%$. #>  simple_prop_percent(seed=4) #> $setup #> $setup$total #> [1] 31 #>  #> $setup$successes #> [1] 19 #>  #> $setup$failures #> [1] 12 #>  #> $setup$proportion #> [1] 0.613 #>  #>  #> $question #> In a survey of 31 people, 19 people said \"yes\" to a particular question. #>  #> $subquestions #> [1] \"What proportion of the people said \\\"yes\\\"?\" #> [2] \"What percent of the people said \\\"yes\\\"?\"    #>  #> $figures #> NULL #>  #> $tables #> NULL #>  #> $solution #>  #> $subsolutions #> [1] \"The proportion is $\\\\frac{19}{31} = 0.613$.\"                #> [2] \"The percentage is $\\\\frac{19}{31}\\\\cdot 100\\\\% = 61.3\\\\%$.\" #>  #> $sol_figures #> NULL #>  #> $sol_tables #> NULL #>  simple_successes(seed=5) #> $setup #> $setup$total #> [1] 25 #>  #> $setup$successes #> [1] 15 #>  #> $setup$failures #> [1] 10 #>  #> $setup$proportion #> [1] 0.6 #>  #>  #> $question #> In a survey of 25 people, the proportion of the people who said \"yes\" to a particular question was 0.6. How many of the people said \"yes\"? #>  #> $answer #> [1] 15 #>  #> $solution #> The number of people who said \"yes\" is $25 \\cdot 0.6 = 15$. #>  simple_percent_successes(seed=6) #> $setup #> $setup$total #> [1] 31 #>  #> $setup$successes #> [1] 13 #>  #> $setup$failures #> [1] 18 #>  #> $setup$proportion #> [1] 0.419 #>  #>  #> $question #> In a survey of 31 people, 41.9% of the people said \"yes\" to a particular question. How many of the people said \"yes\"? #>  #> $answer #> [1] 13 #>  #> $solution #> The number of people who said \"yes\" is $31 \\cdot 0.419 = 13$. #>  dotplot_visual_prop(seed=7) #> $setup #> $setup$n_samps #> [1] 23 #>  #> $setup$mu #> [1] 20 #>  #> $setup$s #> [1] 2 #>  #> $setup$samp #>  [1] 17.60646 18.61141 19.17541 18.05865 18.10544 21.49628 19.76609 20.30532 #>  [9] 24.37996 20.71397 25.43350 24.56290 20.64804 23.79213 20.93536 18.21240 #> [17] 19.38534 19.99036 21.97633 21.67950 21.41068 22.61193 17.22401 #>  #> $setup$breaks #>  [1] 16.5 17.0 17.5 18.0 18.5 19.0 19.5 20.0 20.5 21.0 21.5 22.0 22.5 23.0 23.5 #> [16] 24.0 24.5 25.0 25.5 26.0 #>  #> $setup$cutoff #> [1] 17.5 #>  #> $setup$gtlt #> [1] \">\" #>  #> $setup$successes #> [1] 22 #>  #> $setup$proportion #> [1] 0.957 #>  #>  #> $question #> What proportion of the 23 points shown are greater than 17.5 (dashed line)? #>  #> $answer #> [1] 0.957 #>  #> $solution #> We see that 22 of the points (colored red here) are greater than 17.5, so the proportion is $\\frac{22}{23} = 0.957$. #>  #> $figures #> $figures[[1]] #> function ()  #> { #>     func(vars) #> } #> <bytecode: 0x55653fba8638> #> <environment: 0x55653eb7cfa0> #>  #>  #> $sol_figures #> $sol_figures[[1]] #> function ()  #> { #>     func(vars) #> } #> <bytecode: 0x55653fba8638> #> <environment: 0x55653eb77f28> #>  #>"},{"path":"https://mdkarcher.github.io/repractice/reference/t_ineq_pval.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate p-value for a t test. — t_ineq_pval","title":"Calculate p-value for a t test. — t_ineq_pval","text":"Calculate p-value t test.","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/t_ineq_pval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate p-value for a t test. — t_ineq_pval","text":"","code":"t_ineq_pval(t, df, ineq)"},{"path":"https://mdkarcher.github.io/repractice/reference/t_ineq_pval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate p-value for a t test. — t_ineq_pval","text":"t numeric t test statistic. df integer degrees freedom. ineq string \"<\" gives \"less \" test, \">\" gives \"greater \" test, anything else gives \"two-sided\" test.","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/t_ineq_pval.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate p-value for a t test. — t_ineq_pval","text":"numeric p-value t test.","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/t_ineq_pval.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate p-value for a t test. — t_ineq_pval","text":"","code":"t_ineq_pval(0.5, 10, \">\") #> [1] 0.3139468 t_ineq_pval(2.0, 30, neq()) #> [1] 0.05462504"},{"path":"https://mdkarcher.github.io/repractice/reference/vspace.html","id":null,"dir":"Reference","previous_headings":"","what":"Shortcut for LaTeX vertical spacing — vspace","title":"Shortcut for LaTeX vertical spacing — vspace","text":"Shortcut LaTeX vertical spacing","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/vspace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shortcut for LaTeX vertical spacing — vspace","text":"","code":"vspace(v)"},{"path":"https://mdkarcher.github.io/repractice/reference/vspace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shortcut for LaTeX vertical spacing — vspace","text":"v string insert \\vspace{...}.","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/vspace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shortcut for LaTeX vertical spacing — vspace","text":"string LaTeX vertical space \\vspace{...}","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/vspace.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shortcut for LaTeX vertical spacing — vspace","text":"","code":"vspace(\"30pt\") #> \\vspace{30pt}"},{"path":"https://mdkarcher.github.io/repractice/reference/wrapif.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrap in delimiters under certain conditions — wrapif","title":"Wrap in delimiters under certain conditions — wrapif","text":"Conditional wrapping function. Main use case enclosing negative values parentheses.","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/wrapif.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrap in delimiters under certain conditions — wrapif","text":"","code":"wrapif(x, cond = is_neg, left = \"(\", right = \")\")"},{"path":"https://mdkarcher.github.io/repractice/reference/wrapif.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrap in delimiters under certain conditions — wrapif","text":"x object consideration. cond function returning logical value. left string left delimiter. right string right delimiter.","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/wrapif.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrap in delimiters under certain conditions — wrapif","text":"string containing potentially wrapped input.","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/wrapif.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrap in delimiters under certain conditions — wrapif","text":"","code":"wrapif(5) #> [1] 5 wrapif(-5) #> [1] \"(-5)\""},{"path":"https://mdkarcher.github.io/repractice/reference/z_ineq_pval.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate p-value for a z-test. — z_ineq_pval","title":"Calculate p-value for a z-test. — z_ineq_pval","text":"Calculate p-value z-test.","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/z_ineq_pval.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate p-value for a z-test. — z_ineq_pval","text":"","code":"z_ineq_pval(z, ineq)"},{"path":"https://mdkarcher.github.io/repractice/reference/z_ineq_pval.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate p-value for a z-test. — z_ineq_pval","text":"z numeric z-test statistic. ineq string \"<\" gives \"less \" test, \">\" gives \"greater \" test, anything else gives \"two-sided\" test.","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/z_ineq_pval.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate p-value for a z-test. — z_ineq_pval","text":"numeric p-value z-test.","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/z_ineq_pval.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate p-value for a z-test. — z_ineq_pval","text":"","code":"z_ineq_pval(0.5, \">\") #> [1] 0.3085375 z_ineq_pval(2.0, neq()) #> [1] 0.04550026"}]
