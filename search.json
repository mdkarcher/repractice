[{"path":"https://mdkarcher.github.io/repractice/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 repractice authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://mdkarcher.github.io/repractice/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Michael Karcher. Author, maintainer.","code":""},{"path":"https://mdkarcher.github.io/repractice/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Karcher M (2024). repractice: Framework Reproducible Practice Problems. R package version 0.1.0, https://mdkarcher.github.io/repractice/, https://github.com/mdkarcher/repractice.","code":"@Manual{,   title = {repractice: A Framework for Reproducible Practice Problems},   author = {Michael Karcher},   year = {2024},   note = {R package version 0.1.0, https://mdkarcher.github.io/repractice/},   url = {https://github.com/mdkarcher/repractice}, }"},{"path":"https://mdkarcher.github.io/repractice/index.html","id":"repractice","dir":"","previous_headings":"","what":"A Framework for Reproducible Practice Problems","title":"A Framework for Reproducible Practice Problems","text":"goal repractice facilitate authoring combinatorially variable practice problems solutions.","code":""},{"path":"https://mdkarcher.github.io/repractice/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A Framework for Reproducible Practice Problems","text":"can install development version repractice like :","code":"devtools::install_github(\"mdkarcher/repractice\")"},{"path":"https://mdkarcher.github.io/repractice/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"A Framework for Reproducible Practice Problems","text":"basic example shows solve common problem:","code":"library(repractice)  details <- list(name = \"Michael\", subject=\"statistics\") compile_text(\"My name is <<name>>, and I teach <<subject>>.\", vars = details) #> My name is Michael, and I teach statistics.  setup <- list(exponent = 3) compile_text(r\"(The derivative of $\\pm C x^<<exponent>>$ is $\\pm <<exponent>> C x^<<exponent-1>>$)\", vars = setup) #> The derivative of $\\pm C x^3$ is $\\pm 3 C x^2$"},{"path":"https://mdkarcher.github.io/repractice/reference/ceilingk.html","id":null,"dir":"Reference","previous_headings":"","what":"Ceiling and floor with different precision — ceilingk","title":"Ceiling and floor with different precision — ceilingk","text":"ceilingk rounds numeric vector x k decimal places. floork rounds numeric vector x k decimal places.","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/ceilingk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ceiling and floor with different precision — ceilingk","text":"","code":"ceilingk(x, k = 0)  floork(x, k = 0)"},{"path":"https://mdkarcher.github.io/repractice/reference/ceilingk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ceiling and floor with different precision — ceilingk","text":"x numeric vector values rounded . k integer indicating number decimal places rounded . Default 0","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/ceilingk.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ceiling and floor with different precision — ceilingk","text":"numeric vector rounded values.","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/ceilingk.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ceiling and floor with different precision — ceilingk","text":"","code":"ceilingk(3.14159, 2) #> [1] 3.15 floork(3.14159, 2) #> Error in floork(3.14159, 2): could not find function \"floork\""},{"path":"https://mdkarcher.github.io/repractice/reference/comma_and.html","id":null,"dir":"Reference","previous_headings":"","what":"Concatenate a list with commands and a concluding ","title":"Concatenate a list with commands and a concluding ","text":"Concatenate list commands concluding \"\"","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/comma_and.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concatenate a list with commands and a concluding ","text":"","code":"comma_and(x, oxford = TRUE)"},{"path":"https://mdkarcher.github.io/repractice/reference/comma_and.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Concatenate a list with commands and a concluding ","text":"x vector string-coercible objects. oxford logical whether include Oxford comma.","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/comma_and.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Concatenate a list with commands and a concluding ","text":"string comma concatenated (string-coerced) objects.","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/comma_and.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Concatenate a list with commands and a concluding ","text":"","code":"comma_and(1:3) #> 1, 2, and 3"},{"path":"https://mdkarcher.github.io/repractice/reference/comp.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare values and summarize as (in)equality symbols — comp","title":"Compare values and summarize as (in)equality symbols — comp","text":"Compare values summarize ()equality symbols","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/comp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare values and summarize as (in)equality symbols — comp","text":"","code":"comp(a, b)"},{"path":"https://mdkarcher.github.io/repractice/reference/comp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare values and summarize as (in)equality symbols — comp","text":", b values compare.","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/comp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare values and summarize as (in)equality symbols — comp","text":"character \"=\" equal, \">\" greater b, \"<\" less b.","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/comp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare values and summarize as (in)equality symbols — comp","text":"","code":"comp(1,1) #> [1] \"=\" comp(1,2) #> [1] \"<\" comp(2,1) #> [1] \">\""},{"path":"https://mdkarcher.github.io/repractice/reference/compile_text.html","id":null,"dir":"Reference","previous_headings":"","what":"LaTeX-friendly string interpolation — compile_text","title":"LaTeX-friendly string interpolation — compile_text","text":"Wrapper glue::glue() function LaTeX-friendly raw-string-friendly defaults.","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/compile_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LaTeX-friendly string interpolation — compile_text","text":"","code":"compile_text(   text,   vars = parent.frame(),   open = \"<<\",   close = \">>\",   trim = FALSE )"},{"path":"https://mdkarcher.github.io/repractice/reference/compile_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"LaTeX-friendly string interpolation — compile_text","text":"text string Input template string. vars listish List environment containing variables make available string interpolation. Defaults parent.frame(). open string Opening delimiter. Defaults \"<<\". close string Closing delimiter. Defaults \">>\". trim logical Whether trim text glue::trim() . Unlike glue::glue(), defaults FALSE.","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/compile_text.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"LaTeX-friendly string interpolation — compile_text","text":"glue object.","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/compile_text.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"LaTeX-friendly string interpolation — compile_text","text":"","code":"details <- list(name = \"Michael\", subject=\"statistics\") compile_text(\"My name is <<name>>, and I teach <<subject>>.\", vars = details) #> My name is Michael, and I teach statistics.  setup <- list(exponent = 3) compile_text(r\"(The derivative of $\\pm C x^<<exponent>>$ is $\\pm <<exponent>> C x^<<exponent-1>>$)\", vars = setup) #> The derivative of $\\pm C x^3$ is $\\pm 3 C x^2$"},{"path":"https://mdkarcher.github.io/repractice/reference/dotplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Dot plot (histograms) — dotplot","title":"Dot plot (histograms) — dotplot","text":"Dot plot (histograms)","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/dotplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dot plot (histograms) — dotplot","text":"","code":"dotplot(   x,   breaks = \"Sturges\",   xlim = NULL,   ylim = NULL,   plot = TRUE,   xlab = NULL,   ylab = \"Count\",   ... )"},{"path":"https://mdkarcher.github.io/repractice/reference/dotplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dot plot (histograms) — dotplot","text":"x vector values plotted. breaks passed hist(). xlim, ylim range x y values visualize. plot logical TRUE (default) dot plot plotted. xlab, ylab axis labels. ... arguments passed plot().","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/dotplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dot plot (histograms) — dotplot","text":"histogram object underlying dot plot.","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/dotplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dot plot (histograms) — dotplot","text":"","code":"dotplot(c(1,2,3,3,5,5,5,5,6,7,7,9))  #> $breaks #> [1]  0  2  4  6  8 10 #>  #> $counts #> [1] 2 2 5 2 1 #>  #> $density #> [1] 0.08333333 0.08333333 0.20833333 0.08333333 0.04166667 #>  #> $mids #> [1] 1 3 5 7 9 #>  #> $xname #> [1] \"x\" #>  #> $equidist #> [1] TRUE #>  #> $stacks #>    x Count #> 1  1     1 #> 2  1     2 #> 3  3     1 #> 4  3     2 #> 5  5     1 #> 6  5     2 #> 7  5     3 #> 8  5     4 #> 9  5     5 #> 10 7     1 #> 11 7     2 #> 12 9     1 #>"},{"path":"https://mdkarcher.github.io/repractice/reference/greater_less.html","id":null,"dir":"Reference","previous_headings":"","what":"Expand inequality symbol to word — greater_less","title":"Expand inequality symbol to word — greater_less","text":"Expand inequality symbol word","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/greater_less.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expand inequality symbol to word — greater_less","text":"","code":"greater_less(gtlt, capitalize = FALSE)"},{"path":"https://mdkarcher.github.io/repractice/reference/greater_less.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expand inequality symbol to word — greater_less","text":"gtlt \">\" \"<\" capitalize logical whether capitalize first letter.","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/greater_less.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expand inequality symbol to word — greater_less","text":"string containing \"greater\" \"less\", potentially capitalized.","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/greater_less.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expand inequality symbol to word — greater_less","text":"","code":"greater_less(\"<\") #> Error in greater_less(\"<\"): could not find function \"greater_less\""},{"path":"https://mdkarcher.github.io/repractice/reference/hello.html","id":null,"dir":"Reference","previous_headings":"","what":"Hello, World! — hello","title":"Hello, World! — hello","text":"Prints 'Hello, world!'.","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/hello.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hello, World! — hello","text":"","code":"hello()"},{"path":"https://mdkarcher.github.io/repractice/reference/hello.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hello, World! — hello","text":"","code":"hello() #> Error in hello(): could not find function \"hello\""},{"path":"https://mdkarcher.github.io/repractice/reference/is_neg.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for negative values — is_neg","title":"Check for negative values — is_neg","text":"Check negative values","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/is_neg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for negative values — is_neg","text":"","code":"is_neg(x)"},{"path":"https://mdkarcher.github.io/repractice/reference/is_neg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for negative values — is_neg","text":"x vector values check negativeness. Run .numeric first.","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/is_neg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for negative values — is_neg","text":"logcical vector TRUEs negative values FALSEs nonnegative values.","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/is_neg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check for negative values — is_neg","text":"","code":"is_neg(-1) #> [1] TRUE  is_neg(c(10, -10)) #> [1] FALSE  TRUE"},{"path":"https://mdkarcher.github.io/repractice/reference/lgd.html","id":null,"dir":"Reference","previous_headings":"","what":"Expand inequality symbol to word — lgd","title":"Expand inequality symbol to word — lgd","text":"Expand inequality symbol word","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/lgd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expand inequality symbol to word — lgd","text":"","code":"lgd(ineq)"},{"path":"https://mdkarcher.github.io/repractice/reference/lgd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expand inequality symbol to word — lgd","text":"ineq string \">\" \"<\"","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/lgd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expand inequality symbol to word — lgd","text":"string \"less\" ineq \"<\", \"greater\" ineq \">\", \"different\" ineq anything else.","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/lgd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expand inequality symbol to word — lgd","text":"","code":"lgd(\"<\") #> [1] \"less\" lgd(\">\") #> [1] \"greater\" lgd(neq()) #> [1] \"different\""},{"path":"https://mdkarcher.github.io/repractice/reference/neq.html","id":null,"dir":"Reference","previous_headings":"","what":"Shortcut for LaTeX not equal character — neq","title":"Shortcut for LaTeX not equal character — neq","text":"Shortcut LaTeX equal character","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/neq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shortcut for LaTeX not equal character — neq","text":"","code":"neq()"},{"path":"https://mdkarcher.github.io/repractice/reference/neq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shortcut for LaTeX not equal character — neq","text":"string r\"(\\\\neq)\"","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/neq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shortcut for LaTeX not equal character — neq","text":"","code":"compile_text(r\"($x <<neq()>> 0$)\") #> $x \\neq 0$"},{"path":"https://mdkarcher.github.io/repractice/reference/repractice-package.html","id":null,"dir":"Reference","previous_headings":"","what":"repractice: A Framework for Reproducible Practice Problems — repractice-package","title":"repractice: A Framework for Reproducible Practice Problems — repractice-package","text":"portable framework randomizable logic markdown templating, focus generating combinatorially variable practice problems solutions.","code":""},{"path":[]},{"path":"https://mdkarcher.github.io/repractice/reference/repractice-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"repractice: A Framework for Reproducible Practice Problems — repractice-package","text":"Maintainer: Michael Karcher michael.d.karcher@gmail.com (ORCID)","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/repractice_shiny_tabbed.html","id":null,"dir":"Reference","previous_headings":"","what":"Tabbed Shiny interface for multiple problem sets — repractice_shiny_tabbed","title":"Tabbed Shiny interface for multiple problem sets — repractice_shiny_tabbed","text":"Tabbed Shiny interface multiple problem sets","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/repractice_shiny_tabbed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tabbed Shiny interface for multiple problem sets — repractice_shiny_tabbed","text":"","code":"repractice_shiny_tabbed(problemset_list)"},{"path":"https://mdkarcher.github.io/repractice/reference/repractice_shiny_tabbed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tabbed Shiny interface for multiple problem sets — repractice_shiny_tabbed","text":"problemset_list list problemsets.","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/repractice_shiny_tabbed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tabbed Shiny interface for multiple problem sets — repractice_shiny_tabbed","text":"shinyApp() object.","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/repractice_shiny_tabbed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tabbed Shiny interface for multiple problem sets — repractice_shiny_tabbed","text":"","code":"prop_problems = build_problemset(list(   simple_prop,   pet_prop,   simple_successes,   dotplot_visual_prop ), title=\"Proportions\") #> Error in build_problemset(list(simple_prop, pet_prop, simple_successes,     dotplot_visual_prop), title = \"Proportions\"): could not find function \"build_problemset\"  percent_problems = build_problemset(list(   simple_percent,   simple_percent_successes, ), title=\"Percents\") #> Error in build_problemset(list(simple_percent, simple_percent_successes,     ), title = \"Percents\"): could not find function \"build_problemset\"  repractice_shiny_tabbed(list(prop_problems, percent_problems)) #> Error in eval(expr, envir, enclos): object 'prop_problems' not found"},{"path":"https://mdkarcher.github.io/repractice/reference/vspace.html","id":null,"dir":"Reference","previous_headings":"","what":"Shortcut for LaTeX vertical spacing — vspace","title":"Shortcut for LaTeX vertical spacing — vspace","text":"Shortcut LaTeX vertical spacing","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/vspace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shortcut for LaTeX vertical spacing — vspace","text":"","code":"vspace(v)"},{"path":"https://mdkarcher.github.io/repractice/reference/vspace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shortcut for LaTeX vertical spacing — vspace","text":"v string insert \\vspace{...}.","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/vspace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shortcut for LaTeX vertical spacing — vspace","text":"string LaTeX vertical space \\vspace{...}","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/vspace.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shortcut for LaTeX vertical spacing — vspace","text":"","code":"vspace(\"30pt\") #> \\vspace{30pt}"},{"path":"https://mdkarcher.github.io/repractice/reference/wrapif.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrap in delimiters under certain conditions — wrapif","title":"Wrap in delimiters under certain conditions — wrapif","text":"Conditional wrapping function. Main use case enclosing negative values parentheses.","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/wrapif.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrap in delimiters under certain conditions — wrapif","text":"","code":"wrapif(x, cond = is_neg, left = \"(\", right = \")\")"},{"path":"https://mdkarcher.github.io/repractice/reference/wrapif.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrap in delimiters under certain conditions — wrapif","text":"x object consideration. cond function returning logical value. left string left delimiter. right string right delimiter.","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/wrapif.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrap in delimiters under certain conditions — wrapif","text":"string containing potentially wrapped input.","code":""},{"path":"https://mdkarcher.github.io/repractice/reference/wrapif.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrap in delimiters under certain conditions — wrapif","text":"","code":"wrapif(5) #> [1] 5 wrapif(-5) #> [1] \"(-5)\""}]
